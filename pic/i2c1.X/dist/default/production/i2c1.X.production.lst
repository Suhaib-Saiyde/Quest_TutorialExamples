

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Jan 16 07:30:21 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  0007                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000D                     	;# 
    32  000E                     	;# 
    33  000E                     	;# 
    34  000F                     	;# 
    35  0010                     	;# 
    36  0011                     	;# 
    37  0012                     	;# 
    38  0013                     	;# 
    39  0014                     	;# 
    40  0015                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0017                     	;# 
    44  0018                     	;# 
    45  0019                     	;# 
    46  001A                     	;# 
    47  001B                     	;# 
    48  001B                     	;# 
    49  001C                     	;# 
    50  001D                     	;# 
    51  001E                     	;# 
    52  001F                     	;# 
    53  0081                     	;# 
    54  0085                     	;# 
    55  0086                     	;# 
    56  0087                     	;# 
    57  008C                     	;# 
    58  008D                     	;# 
    59  008E                     	;# 
    60  0091                     	;# 
    61  0092                     	;# 
    62  0093                     	;# 
    63  0094                     	;# 
    64  0098                     	;# 
    65  0099                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009E                     	;# 
    69  009F                     	;# 
    70  010C                     	;# 
    71  010D                     	;# 
    72  010E                     	;# 
    73  010F                     	;# 
    74  018C                     	;# 
    75  018D                     	;# 
    76                           
    77                           	psect	strings
    78  0003                     __pstrings:	
    79  0003                     stringtab:	
    80  0003                     __stringtab:	
    81  0003                     stringcode:	
    82                           ;	String table - string pointers are 1 byte each
    83                           
    84  0003                     stringdir:	
    85  0003  3000               	movlw	high stringdir
    86  0004  008A               	movwf	10
    87  0005  0804               	movf	4,w
    88  0006  0A84               	incf	4,f
    89  0007  0782               	addwf	2,f
    90  0008                     __stringbase:	
    91  0008  3400               	retlw	0
    92  0009                     __end_of__stringtab:	
    93  0009                     _hexpowers:	
    94  0009  3401               	retlw	1
    95  000A  3400               	retlw	0
    96  000B  3410               	retlw	16
    97  000C  3400               	retlw	0
    98  000D  3400               	retlw	0
    99  000E  3401               	retlw	1
   100  000F  3400               	retlw	0
   101  0010  3410               	retlw	16
   102  0011                     __end_of_hexpowers:	
   103  0018                     _RCSTA	set	24
   104  0013                     _SSPBUF	set	19
   105  0014                     _SSPCON	set	20
   106  0019                     _TXREG	set	25
   107  0063                     _SSPIF	set	99
   108  0099                     _SPBRG	set	153
   109  0093                     _SSPADD	set	147
   110  0094                     _SSPSTAT	set	148
   111  0098                     _TXSTA	set	152
   112  048D                     _ACKDT	set	1165
   113  048C                     _ACKEN	set	1164
   114  048E                     _ACKSTAT	set	1166
   115  048A                     _PEN	set	1162
   116  048B                     _RCEN	set	1163
   117  0489                     _RSEN	set	1161
   118  0488                     _SEN	set	1160
   119  043B                     _TRISC3	set	1083
   120  043C                     _TRISC4	set	1084
   121  04C1                     _TRMT	set	1217
   122  0011                     __stringdata:	
   123  0011                     STR_2:	
   124  0011  3430               	retlw	48	;'0'
   125  0012  3431               	retlw	49	;'1'
   126  0013  3432               	retlw	50	;'2'
   127  0014  3433               	retlw	51	;'3'
   128  0015  3434               	retlw	52	;'4'
   129  0016  3435               	retlw	53	;'5'
   130  0017  3436               	retlw	54	;'6'
   131  0018  3437               	retlw	55	;'7'
   132  0019  3438               	retlw	56	;'8'
   133  001A  3439               	retlw	57	;'9'
   134  001B  3461               	retlw	97	;'a'
   135  001C  3462               	retlw	98	;'b'
   136  001D  3463               	retlw	99	;'c'
   137  001E  3464               	retlw	100	;'d'
   138  001F  3465               	retlw	101	;'e'
   139  0020  3466               	retlw	102	;'f'
   140  0021  3400               	retlw	0
   141  0022                     STR_1:	
   142  0022  3425               	retlw	37	;'%'
   143  0023  3478               	retlw	120	;'x'
   144  0024  343A               	retlw	58	;':'
   145  0025  3425               	retlw	37	;'%'
   146  0026  3478               	retlw	120	;'x'
   147  0027  343A               	retlw	58	;':'
   148  0028  3425               	retlw	37	;'%'
   149  0029  3478               	retlw	120	;'x'
   150  002A  340D               	retlw	13
   151  002B  3400               	retlw	0
   152  002C                     __end_of__stringdata:	
   153                           
   154                           ; #config settings
   155  0000                     
   156                           	psect	cinit
   157  07FC                     start_initialization:	
   158  07FC                     __initialization:	
   159  07FC                     end_of_initialization:	
   160                           ;End of C runtime variable initialization code
   161                           
   162  07FC                     __end_of__initialization:	
   163  07FC  0183               	clrf	3
   164  07FD  120A  118A  2F2C   	ljmp	_main	;jump to C main() function
   165                           
   166                           	psect	cstackCOMMON
   167  0070                     __pcstackCOMMON:	
   168  0070                     ?_init:	
   169  0070                     ??_init:	
   170                           ; 0 bytes @ 0x0
   171                           
   172  0070                     ?_start:	
   173                           ; 0 bytes @ 0x0
   174                           
   175  0070                     ??_start:	
   176                           ; 0 bytes @ 0x0
   177                           
   178  0070                     ?_stop:	
   179                           ; 0 bytes @ 0x0
   180                           
   181  0070                     ??_stop:	
   182                           ; 0 bytes @ 0x0
   183                           
   184  0070                     ?_restart:	
   185                           ; 0 bytes @ 0x0
   186                           
   187  0070                     ??_restart:	
   188                           ; 0 bytes @ 0x0
   189                           
   190  0070                     ??_read:	
   191                           ; 0 bytes @ 0x0
   192                           
   193  0070                     ?_ack:	
   194                           ; 0 bytes @ 0x0
   195                           
   196  0070                     ??_ack:	
   197                           ; 0 bytes @ 0x0
   198                           
   199  0070                     ?_nack:	
   200                           ; 0 bytes @ 0x0
   201                           
   202  0070                     ??_nack:	
   203                           ; 0 bytes @ 0x0
   204                           
   205  0070                     ?_main:	
   206                           ; 0 bytes @ 0x0
   207                           
   208  0070                     ?_read:	
   209                           ; 0 bytes @ 0x0
   210                           
   211  0070                     ?_send:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  0070                     ?___lwdiv:	
   215                           ; 2 bytes @ 0x0
   216                           
   217  0070                     ___lwdiv@divisor:	
   218                           ; 2 bytes @ 0x0
   219                           
   220                           
   221                           ; 2 bytes @ 0x0
   222  0070                     	ds	2
   223  0072                     ??_send:	
   224  0072                     ___lwdiv@dividend:	
   225                           ; 0 bytes @ 0x2
   226                           
   227                           
   228                           ; 2 bytes @ 0x2
   229  0072                     	ds	2
   230  0074                     ??___lwdiv:	
   231  0074                     send@a:	
   232                           ; 0 bytes @ 0x4
   233                           
   234                           
   235                           ; 1 bytes @ 0x4
   236  0074                     	ds	1
   237  0075                     ___lwdiv@quotient:	
   238                           
   239                           ; 2 bytes @ 0x5
   240  0075                     	ds	2
   241  0077                     ___lwdiv@counter:	
   242                           
   243                           ; 1 bytes @ 0x7
   244  0077                     	ds	1
   245  0078                     ??_sprintf:	
   246                           
   247                           ; 0 bytes @ 0x8
   248  0078                     	ds	3
   249                           
   250                           	psect	cstackBANK0
   251  0020                     __pcstackBANK0:	
   252  0020                     ?_sprintf:	
   253  0020                     sprintf@f:	
   254                           ; 2 bytes @ 0x0
   255                           
   256                           
   257                           ; 1 bytes @ 0x0
   258  0020                     	ds	7
   259  0027                     sprintf@flag:	
   260                           
   261                           ; 1 bytes @ 0x7
   262  0027                     	ds	1
   263  0028                     sprintf@idx:	
   264                           
   265                           ; 1 bytes @ 0x8
   266  0028                     	ds	1
   267  0029                     sprintf@ap:	
   268                           
   269                           ; 1 bytes @ 0x9
   270  0029                     	ds	1
   271  002A                     sprintf@_val:	
   272                           
   273                           ; 4 bytes @ 0xA
   274  002A                     	ds	4
   275  002E                     sprintf@prec:	
   276                           
   277                           ; 1 bytes @ 0xE
   278  002E                     	ds	1
   279  002F                     sprintf@sp:	
   280                           
   281                           ; 1 bytes @ 0xF
   282  002F                     	ds	1
   283  0030                     sprintf@c:	
   284                           
   285                           ; 1 bytes @ 0x10
   286  0030                     	ds	1
   287  0031                     ??_main:	
   288                           
   289                           ; 0 bytes @ 0x11
   290  0031                     	ds	7
   291  0038                     main@a:	
   292                           
   293                           ; 15 bytes @ 0x18
   294  0038                     	ds	15
   295  0047                     main@sec:	
   296                           
   297                           ; 1 bytes @ 0x27
   298  0047                     	ds	1
   299  0048                     main@min:	
   300                           
   301                           ; 1 bytes @ 0x28
   302  0048                     	ds	1
   303  0049                     main@hr:	
   304                           
   305                           ; 1 bytes @ 0x29
   306  0049                     	ds	1
   307  004A                     main@i:	
   308                           
   309                           ; 2 bytes @ 0x2A
   310  004A                     	ds	2
   311                           
   312                           	psect	maintext
   313  072C                     __pmaintext:	
   314 ;;
   315 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
   316 ;;
   317 ;; *************** function _main *****************
   318 ;; Defined at:
   319 ;;		line 80 in file "i2c1.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;  a              15   24[BANK0 ] unsigned char [15]
   324 ;;  i               2   42[BANK0 ] int 
   325 ;;  hr              1   41[BANK0 ] unsigned char 
   326 ;;  min             1   40[BANK0 ] unsigned char 
   327 ;;  sec             1   39[BANK0 ] unsigned char 
   328 ;; Return value:  Size  Location     Type
   329 ;;		None               void
   330 ;; Registers used:
   331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : 17F/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         0       0       0       0       0
   338 ;;      Locals:         0      20       0       0       0
   339 ;;      Temps:          0       7       0       0       0
   340 ;;      Totals:         0      27       0       0       0
   341 ;;Total ram usage:       27 bytes
   342 ;; Hardware stack levels required when called:    2
   343 ;; This function calls:
   344 ;;		_ack
   345 ;;		_init
   346 ;;		_nack
   347 ;;		_read
   348 ;;		_restart
   349 ;;		_send
   350 ;;		_sprintf
   351 ;;		_start
   352 ;;		_stop
   353 ;; This function is called by:
   354 ;;		Startup code after reset
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           
   359                           ;psect for function _main
   360  072C                     _main:	
   361                           
   362                           ;i2c1.c: 82: int i;
   363                           ;i2c1.c: 83: init();
   364                           
   365                           ;incstack = 0
   366                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   367  072C  120A  118A  2608  120A  118A  	fcall	_init
   368  0731                     L1:	
   369                           
   370                           ;i2c1.c: 84: char sec,min,hr;
   371                           ;i2c1.c: 85: char a[15];
   372                           ;i2c1.c: 86: start();
   373  0731  120A  118A  25DD  120A  118A  	fcall	_start
   374                           
   375                           ;i2c1.c: 87: while(send(0xD0))
   376  0736  30D0               	movlw	208
   377  0737  120A  118A  261F  120A  118A  	fcall	_send
   378  073C  0871               	movf	?_send+1,w
   379  073D  0470               	iorwf	?_send,w
   380  073E  1D03               	skipz
   381  073F  2F31               	goto	L1
   382                           
   383                           ;i2c1.c: 90: }
   384                           ;i2c1.c: 91: send(0x00);
   385                           
   386                           ;i2c1.c: 88: {
   387                           ;i2c1.c: 89: start();
   388  0740  3000               	movlw	0
   389  0741  120A  118A  261F  120A  118A  	fcall	_send
   390                           
   391                           ;i2c1.c: 92: send(0x20);
   392  0746  3020               	movlw	32
   393  0747  120A  118A  261F  120A  118A  	fcall	_send
   394                           
   395                           ;i2c1.c: 93: send(0x30);
   396  074C  3030               	movlw	48
   397  074D  120A  118A  261F  120A  118A  	fcall	_send
   398                           
   399                           ;i2c1.c: 94: send(0x07);
   400  0752  3007               	movlw	7
   401  0753  120A  118A  261F  120A  118A  	fcall	_send
   402                           
   403                           ;i2c1.c: 95: stop();
   404  0758  120A  118A  25E5  120A  118A  	fcall	_stop
   405  075D                     l851:	
   406                           ;i2c1.c: 96: while(1)
   407                           
   408                           
   409                           ;i2c1.c: 97: {
   410                           ;i2c1.c: 98: start();
   411  075D  120A  118A  25DD  120A  118A  	fcall	_start
   412                           
   413                           ;i2c1.c: 99: while(send(0xD0))
   414  0762  30D0               	movlw	208
   415  0763  120A  118A  261F  120A  118A  	fcall	_send
   416  0768  0871               	movf	?_send+1,w
   417  0769  0470               	iorwf	?_send,w
   418  076A  1D03               	skipz
   419  076B  2F5D               	goto	l851
   420                           
   421                           ;i2c1.c: 102: }
   422                           ;i2c1.c: 103: send(0x00);
   423                           
   424                           ;i2c1.c: 100: {
   425                           ;i2c1.c: 101: start();
   426  076C  3000               	movlw	0
   427  076D  120A  118A  261F  120A  118A  	fcall	_send
   428                           
   429                           ;i2c1.c: 104: restart();
   430  0772  120A  118A  25D5  120A  118A  	fcall	_restart
   431                           
   432                           ;i2c1.c: 105: send(0xD1);
   433  0777  30D1               	movlw	209
   434  0778  120A  118A  261F  120A  118A  	fcall	_send
   435                           
   436                           ;i2c1.c: 106: sec=read();
   437  077D  120A  118A  25FF  120A  118A  	fcall	_read
   438  0782  1283               	bcf	3,5	;RP0=0, select bank0
   439  0783  1303               	bcf	3,6	;RP1=0, select bank0
   440  0784  00B1               	movwf	??_main
   441  0785  0831               	movf	??_main,w
   442  0786  00C7               	movwf	main@sec
   443                           
   444                           ;i2c1.c: 107: ack();
   445  0787  120A  118A  25ED  120A  118A  	fcall	_ack
   446                           
   447                           ;i2c1.c: 108: min=read();
   448  078C  120A  118A  25FF  120A  118A  	fcall	_read
   449  0791  1283               	bcf	3,5	;RP0=0, select bank0
   450  0792  1303               	bcf	3,6	;RP1=0, select bank0
   451  0793  00B1               	movwf	??_main
   452  0794  0831               	movf	??_main,w
   453  0795  00C8               	movwf	main@min
   454                           
   455                           ;i2c1.c: 109: ack();
   456  0796  120A  118A  25ED  120A  118A  	fcall	_ack
   457                           
   458                           ;i2c1.c: 110: hr=read();
   459  079B  120A  118A  25FF  120A  118A  	fcall	_read
   460  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   461  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   462  07A2  00B1               	movwf	??_main
   463  07A3  0831               	movf	??_main,w
   464  07A4  00C9               	movwf	main@hr
   465                           
   466                           ;i2c1.c: 111: nack();
   467  07A5  120A  118A  25F6  120A  118A  	fcall	_nack
   468                           
   469                           ;i2c1.c: 112: stop();
   470  07AA  120A  118A  25E5  120A  118A  	fcall	_stop
   471                           
   472                           ;i2c1.c: 113: sprintf(a,"%x:%x:%x\r",hr,min,sec);
   473  07AF  301A               	movlw	(STR_1-__stringbase)& (0+255)
   474  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   475  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   476  07B2  00B1               	movwf	??_main
   477  07B3  0831               	movf	??_main,w
   478  07B4  00A0               	movwf	sprintf@f
   479  07B5  0849               	movf	main@hr,w
   480  07B6  00B2               	movwf	??_main+1
   481  07B7  01B3               	clrf	??_main+2
   482  07B8  0832               	movf	??_main+1,w
   483  07B9  00A1               	movwf	?_sprintf+1
   484  07BA  0833               	movf	??_main+2,w
   485  07BB  00A2               	movwf	?_sprintf+2
   486  07BC  0848               	movf	main@min,w
   487  07BD  00B4               	movwf	??_main+3
   488  07BE  01B5               	clrf	??_main+4
   489  07BF  0834               	movf	??_main+3,w
   490  07C0  00A3               	movwf	?_sprintf+3
   491  07C1  0835               	movf	??_main+4,w
   492  07C2  00A4               	movwf	?_sprintf+4
   493  07C3  0847               	movf	main@sec,w
   494  07C4  00B6               	movwf	??_main+5
   495  07C5  01B7               	clrf	??_main+6
   496  07C6  0836               	movf	??_main+5,w
   497  07C7  00A5               	movwf	?_sprintf+5
   498  07C8  0837               	movf	??_main+6,w
   499  07C9  00A6               	movwf	?_sprintf+6
   500  07CA  3038               	movlw	main@a& (0+255)
   501  07CB  120A  118A  2674  120A  118A  	fcall	_sprintf
   502                           
   503                           ;i2c1.c: 114: for(i=0;a[i];i++)
   504  07D0  1283               	bcf	3,5	;RP0=0, select bank0
   505  07D1  1303               	bcf	3,6	;RP1=0, select bank0
   506  07D2  01CA               	clrf	main@i
   507  07D3  01CB               	clrf	main@i+1
   508  07D4                     l879:	
   509  07D4  084A               	movf	main@i,w
   510  07D5  3E38               	addlw	main@a& (0+255)
   511  07D6  0084               	movwf	4
   512  07D7  1383               	bcf	3,7	;select IRP bank0
   513  07D8  0880               	movf	0,f
   514  07D9  1903               	btfsc	3,2
   515  07DA  2FEE               	goto	l881
   516                           
   517                           ;i2c1.c: 115: {
   518                           ;i2c1.c: 116: TXREG=a[i];
   519  07DB  084A               	movf	main@i,w
   520  07DC  3E38               	addlw	main@a& (0+255)
   521  07DD  0084               	movwf	4
   522  07DE  1383               	bcf	3,7	;select IRP bank0
   523  07DF  0800               	movf	0,w
   524  07E0  0099               	movwf	25	;volatile
   525  07E1                     l99:	
   526                           ;i2c1.c: 117: while(TRMT==0);
   527                           
   528  07E1  1683               	bsf	3,5	;RP0=1, select bank1
   529  07E2  1303               	bcf	3,6	;RP1=0, select bank1
   530  07E3  1C98               	btfss	24,1	;volatile
   531  07E4  2FE1               	goto	l99
   532  07E5  3001               	movlw	1
   533  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   534  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   535  07E8  07CA               	addwf	main@i,f
   536  07E9  1803               	skipnc
   537  07EA  0ACB               	incf	main@i+1,f
   538  07EB  3000               	movlw	0
   539  07EC  07CB               	addwf	main@i+1,f
   540  07ED  2FD4               	goto	l879
   541  07EE                     l881:	
   542                           
   543                           ;i2c1.c: 118: }
   544                           ;i2c1.c: 119: _delay((unsigned long)((1000)*(4000000/4000.0)));
   545  07EE  3006               	movlw	6
   546  07EF  00B3               	movwf	??_main+2
   547  07F0  3013               	movlw	19
   548  07F1  00B2               	movwf	??_main+1
   549  07F2  30B1               	movlw	177
   550  07F3  00B1               	movwf	??_main
   551  07F4                     u497:	
   552  07F4  0BB1               	decfsz	??_main,f
   553  07F5  2FF4               	goto	u497
   554  07F6  0BB2               	decfsz	??_main+1,f
   555  07F7  2FF4               	goto	u497
   556  07F8  0BB3               	decfsz	??_main+2,f
   557  07F9  2FF4               	goto	u497
   558  07FA  2FFB               	nop2
   559  07FB  2F5D               	goto	l851
   560  07FC                     __end_of_main:	
   561                           
   562                           	psect	text1
   563  05E5                     __ptext1:	
   564 ;; *************** function _stop *****************
   565 ;; Defined at:
   566 ;;		line 43 in file "i2c1.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;		None               void
   573 ;; Registers used:
   574 ;;		None
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; This function calls:
   587 ;;		Nothing
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function _stop
   595  05E5                     _stop:	
   596                           
   597                           ;i2c1.c: 45: PEN=1;
   598                           
   599                           ;incstack = 0
   600                           ; Regs used in _stop: []
   601  05E5  1683               	bsf	3,5	;RP0=1, select bank1
   602  05E6  1303               	bcf	3,6	;RP1=0, select bank1
   603  05E7  1511               	bsf	17,2	;volatile
   604  05E8                     l60:	
   605                           ;i2c1.c: 46: while(SSPIF==0);
   606                           
   607  05E8  1283               	bcf	3,5	;RP0=0, select bank0
   608  05E9  1D8C               	btfss	12,3	;volatile
   609  05EA  2DE8               	goto	l60
   610                           
   611                           ;i2c1.c: 47: SSPIF=0;
   612  05EB  118C               	bcf	12,3	;volatile
   613  05EC  0008               	return
   614  05ED                     __end_of_stop:	
   615                           
   616                           	psect	text2
   617  05DD                     __ptext2:	
   618 ;; *************** function _start *****************
   619 ;; Defined at:
   620 ;;		line 28 in file "i2c1.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;		None               void
   627 ;; Registers used:
   628 ;;		None
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0
   637 ;;      Totals:         0       0       0       0       0
   638 ;;Total ram usage:        0 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           
   648                           ;psect for function _start
   649  05DD                     _start:	
   650                           
   651                           ;i2c1.c: 30: SEN=1;
   652                           
   653                           ;incstack = 0
   654                           ; Regs used in _start: []
   655  05DD  1683               	bsf	3,5	;RP0=1, select bank1
   656  05DE  1303               	bcf	3,6	;RP1=0, select bank1
   657  05DF  1411               	bsf	17,0	;volatile
   658  05E0                     l48:	
   659                           ;i2c1.c: 31: while(SSPIF==0);
   660                           
   661  05E0  1283               	bcf	3,5	;RP0=0, select bank0
   662  05E1  1D8C               	btfss	12,3	;volatile
   663  05E2  2DE0               	goto	l48
   664                           
   665                           ;i2c1.c: 32: SSPIF=0;
   666  05E3  118C               	bcf	12,3	;volatile
   667  05E4  0008               	return
   668  05E5                     __end_of_start:	
   669                           
   670                           	psect	text3
   671  0674                     __ptext3:	
   672 ;; *************** function _sprintf *****************
   673 ;; Defined at:
   674 ;;		line 492 in file "/opt/microchip/xc8/v1.33/sources/common/doprnt.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;  sp              1    wreg     PTR unsigned char 
   677 ;;		 -> main@a(15), 
   678 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   679 ;;		 -> STR_1(10), 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  sp              1   15[BANK0 ] PTR unsigned char 
   682 ;;		 -> main@a(15), 
   683 ;;  idx             1    8[BANK0 ] unsigned char 
   684 ;;  _val            4   10[BANK0 ] struct .
   685 ;;  c               1   16[BANK0 ] char 
   686 ;;  prec            1   14[BANK0 ] char 
   687 ;;  ap              1    9[BANK0 ] PTR void [1]
   688 ;;		 -> ?_sprintf(2), 
   689 ;;  flag            1    7[BANK0 ] unsigned char 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  2    0[BANK0 ] int 
   692 ;; Registers used:
   693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         0       7       0       0       0
   700 ;;      Locals:         0      10       0       0       0
   701 ;;      Temps:          3       0       0       0       0
   702 ;;      Totals:         3      17       0       0       0
   703 ;;Total ram usage:       20 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; Hardware stack levels required when called:    1
   706 ;; This function calls:
   707 ;;		___lwdiv
   708 ;; This function is called by:
   709 ;;		_main
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           
   714                           ;psect for function _sprintf
   715  0674                     _sprintf:	
   716                           
   717                           ;incstack = 0
   718                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   719                           ;sprintf@sp stored from wreg
   720  0674  1283               	bcf	3,5	;RP0=0, select bank0
   721  0675  1303               	bcf	3,6	;RP1=0, select bank0
   722  0676  00AF               	movwf	sprintf@sp
   723                           
   724                           ;doprnt.c: 494: va_list ap;
   725                           ;doprnt.c: 499: signed char c;
   726                           ;doprnt.c: 506: signed char prec;
   727                           ;doprnt.c: 508: unsigned char flag;
   728                           ;doprnt.c: 527: union {
   729                           ;doprnt.c: 528: unsigned int _val;
   730                           ;doprnt.c: 529: struct {
   731                           ;doprnt.c: 530: const char * _cp;
   732                           ;doprnt.c: 531: unsigned _len;
   733                           ;doprnt.c: 532: } _str;
   734                           ;doprnt.c: 533: } _val;
   735                           ;doprnt.c: 542: *ap = __va_start();
   736  0677  3021               	movlw	(?_sprintf+1)& (0+255)
   737  0678  00F8               	movwf	??_sprintf
   738  0679  0878               	movf	??_sprintf,w
   739  067A  00A9               	movwf	sprintf@ap
   740  067B                     l833:	
   741                           ;doprnt.c: 545: while(c = *f++) {
   742                           
   743  067B  3001               	movlw	1
   744  067C  07A0               	addwf	sprintf@f,f
   745  067D  30FF               	movlw	-1
   746  067E  0720               	addwf	sprintf@f,w
   747  067F  0084               	movwf	4
   748  0680  120A  118A  2003  120A  118A  	fcall	stringdir
   749  0685  00F8               	movwf	??_sprintf
   750  0686  0878               	movf	??_sprintf,w
   751  0687  00B0               	movwf	sprintf@c
   752  0688  08B0               	movf	sprintf@c,f
   753  0689  1903               	btfsc	3,2
   754  068A  2F27               	goto	l835
   755                           
   756                           ;doprnt.c: 547: if(c != '%')
   757  068B  0830               	movf	sprintf@c,w
   758  068C  3A25               	xorlw	37
   759  068D  1903               	skipnz
   760  068E  2E9B               	goto	l797
   761                           
   762                           ;doprnt.c: 549: {
   763                           ;doprnt.c: 550: ((*sp++ = (c)));
   764  068F  0830               	movf	sprintf@c,w
   765  0690  00F8               	movwf	??_sprintf
   766  0691  082F               	movf	sprintf@sp,w
   767  0692  0084               	movwf	4
   768  0693  0878               	movf	??_sprintf,w
   769  0694  1383               	bcf	3,7	;select IRP bank0
   770  0695  0080               	movwf	0
   771  0696  3001               	movlw	1
   772  0697  00F8               	movwf	??_sprintf
   773  0698  0878               	movf	??_sprintf,w
   774  0699  07AF               	addwf	sprintf@sp,f
   775                           
   776                           ;doprnt.c: 551: continue;
   777  069A  2E7B               	goto	l833
   778  069B                     l797:	
   779                           
   780                           ;doprnt.c: 552: }
   781                           ;doprnt.c: 557: flag = 0;
   782  069B  01A7               	clrf	sprintf@flag
   783                           
   784                           ;doprnt.c: 831: }
   785                           
   786                           ;doprnt.c: 822: continue;
   787                           
   788                           ;doprnt.c: 811: default:
   789                           
   790                           ;doprnt.c: 732: break;
   791                           
   792                           ;doprnt.c: 727: case 'x':
   793                           
   794                           ;doprnt.c: 647: goto alldone;
   795                           
   796                           ;doprnt.c: 646: case 0:
   797                           
   798                           ;doprnt.c: 644: switch(c = *f++) {
   799  069C  3001               	movlw	1
   800  069D  07A0               	addwf	sprintf@f,f
   801  069E  30FF               	movlw	-1
   802  069F  0720               	addwf	sprintf@f,w
   803  06A0  0084               	movwf	4
   804  06A1  120A  118A  2003  120A  118A  	fcall	stringdir
   805  06A6  00B0               	movwf	sprintf@c
   806                           
   807                           ; Switch size 1, requested type "space"
   808                           ; Number of cases is 2, Range of values is 0 to 120
   809                           ; switch strategies available:
   810                           ; Name         Instructions Cycles
   811                           ; simple_byte            7     4 (average)
   812                           ; jumptable            260     6 (fixed)
   813                           ;	Chosen strategy is simple_byte
   814  06A7  3A00               	xorlw	0	; case 0
   815  06A8  1903               	skipnz
   816  06A9  2F27               	goto	l835
   817  06AA  3A78               	xorlw	120	; case 120
   818  06AB  1903               	skipnz
   819  06AC  2EAE               	goto	l803
   820  06AD  2E7B               	goto	l833
   821  06AE                     l803:	
   822                           
   823                           ;doprnt.c: 1282: {
   824                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
   825  06AE  0829               	movf	sprintf@ap,w
   826  06AF  0084               	movwf	4
   827  06B0  1383               	bcf	3,7	;select IRP bank0
   828  06B1  0800               	movf	0,w
   829  06B2  00AA               	movwf	sprintf@_val
   830  06B3  0A84               	incf	4,f
   831  06B4  0800               	movf	0,w
   832  06B5  00AB               	movwf	sprintf@_val+1
   833  06B6  3002               	movlw	2
   834  06B7  00F8               	movwf	??_sprintf
   835  06B8  0878               	movf	??_sprintf,w
   836  06B9  07A9               	addwf	sprintf@ap,f
   837                           
   838                           ;doprnt.c: 1296: }
   839                           ;doprnt.c: 1325: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
   840  06BA  01B0               	clrf	sprintf@c
   841  06BB  0AB0               	incf	sprintf@c,f
   842  06BC  0830               	movf	sprintf@c,w
   843  06BD  3A04               	xorlw	4
   844  06BE  1903               	btfsc	3,2
   845  06BF  2EE1               	goto	l821
   846  06C0                     l813:	
   847                           
   848                           ;doprnt.c: 1326: if(_val._val < hexpowers[c])
   849  06C0  0830               	movf	sprintf@c,w
   850  06C1  00F8               	movwf	??_sprintf
   851  06C2  0778               	addwf	??_sprintf,w
   852  06C3  3E01               	addlw	low (_hexpowers-__stringbase)
   853  06C4  0084               	movwf	4
   854  06C5  120A  118A  2003  120A  118A  	fcall	stringdir
   855  06CA  00F9               	movwf	??_sprintf+1
   856  06CB  120A  118A  2003  120A  118A  	fcall	stringdir
   857  06D0  00FA               	movwf	??_sprintf+2
   858  06D1  087A               	movf	??_sprintf+2,w
   859  06D2  022B               	subwf	sprintf@_val+1,w
   860  06D3  1D03               	skipz
   861  06D4  2ED7               	goto	u415
   862  06D5  0879               	movf	??_sprintf+1,w
   863  06D6  022A               	subwf	sprintf@_val,w
   864  06D7                     u415:	
   865  06D7  1C03               	btfss	3,0
   866  06D8  2EE1               	goto	l821
   867                           
   868                           ;doprnt.c: 1327: break;
   869  06D9  3001               	movlw	1
   870  06DA  00F8               	movwf	??_sprintf
   871  06DB  0878               	movf	??_sprintf,w
   872  06DC  07B0               	addwf	sprintf@c,f
   873  06DD  0830               	movf	sprintf@c,w
   874  06DE  3A04               	xorlw	4
   875  06DF  1D03               	skipz
   876  06E0  2EC0               	goto	l813
   877  06E1                     l821:	
   878                           
   879                           ;doprnt.c: 1431: {
   880                           ;doprnt.c: 1478: }
   881                           ;doprnt.c: 1481: prec = c;
   882  06E1  0830               	movf	sprintf@c,w
   883  06E2  00F8               	movwf	??_sprintf
   884  06E3  0878               	movf	??_sprintf,w
   885  06E4  00AE               	movwf	sprintf@prec
   886  06E5                     l831:	
   887                           ;doprnt.c: 1483: while(prec--) {
   888                           
   889  06E5  30FF               	movlw	-1
   890  06E6  00F8               	movwf	??_sprintf
   891  06E7  0878               	movf	??_sprintf,w
   892  06E8  07AE               	addwf	sprintf@prec,f
   893  06E9  082E               	movf	sprintf@prec,w
   894  06EA  3AFF               	xorlw	-1
   895  06EB  1903               	btfsc	3,2
   896  06EC  2E7B               	goto	l833
   897                           
   898                           ;doprnt.c: 1487: {
   899                           ;doprnt.c: 1508: {
   900                           ;doprnt.c: 1509: unsigned char idx = (_val._val / hexpowers[prec]) & 0xF;
   901  06ED  082E               	movf	sprintf@prec,w
   902  06EE  00F8               	movwf	??_sprintf
   903  06EF  0778               	addwf	??_sprintf,w
   904  06F0  3E01               	addlw	low (_hexpowers-__stringbase)
   905  06F1  0084               	movwf	4
   906  06F2  120A  118A  2003  120A  118A  	fcall	stringdir
   907  06F7  00F0               	movwf	___lwdiv@divisor
   908  06F8  120A  118A  2003  120A  118A  	fcall	stringdir
   909  06FD  00F1               	movwf	___lwdiv@divisor+1
   910  06FE  082B               	movf	sprintf@_val+1,w
   911  06FF  01F3               	clrf	___lwdiv@dividend+1
   912  0700  07F3               	addwf	___lwdiv@dividend+1,f
   913  0701  082A               	movf	sprintf@_val,w
   914  0702  01F2               	clrf	___lwdiv@dividend
   915  0703  07F2               	addwf	___lwdiv@dividend,f
   916  0704  120A  118A  2636  120A  118A  	fcall	___lwdiv
   917  0709  0870               	movf	?___lwdiv,w
   918  070A  390F               	andlw	15
   919  070B  00F9               	movwf	??_sprintf+1
   920  070C  0879               	movf	??_sprintf+1,w
   921  070D  1283               	bcf	3,5	;RP0=0, select bank0
   922  070E  1303               	bcf	3,6	;RP1=0, select bank0
   923  070F  00A8               	movwf	sprintf@idx
   924                           
   925                           ;doprnt.c: 1515: c = "0123456789abcdef"[idx];
   926  0710  0828               	movf	sprintf@idx,w
   927  0711  3E09               	addlw	low (STR_2-__stringbase)
   928  0712  0084               	movwf	4
   929  0713  120A  118A  2003  120A  118A  	fcall	stringdir
   930  0718  00F8               	movwf	??_sprintf
   931  0719  0878               	movf	??_sprintf,w
   932  071A  00B0               	movwf	sprintf@c
   933                           
   934                           ;doprnt.c: 1517: }
   935                           ;doprnt.c: 1532: }
   936                           ;doprnt.c: 1533: ((*sp++ = (c)));
   937  071B  0830               	movf	sprintf@c,w
   938  071C  00F8               	movwf	??_sprintf
   939  071D  082F               	movf	sprintf@sp,w
   940  071E  0084               	movwf	4
   941  071F  0878               	movf	??_sprintf,w
   942  0720  1383               	bcf	3,7	;select IRP bank0
   943  0721  0080               	movwf	0
   944  0722  3001               	movlw	1
   945  0723  00F8               	movwf	??_sprintf
   946  0724  0878               	movf	??_sprintf,w
   947  0725  07AF               	addwf	sprintf@sp,f
   948  0726  2EE5               	goto	l831
   949  0727                     l835:	
   950                           ;doprnt.c: 1534: }
   951                           ;doprnt.c: 1542: }
   952                           ;doprnt.c: 1544: alldone:
   953                           
   954                           
   955                           ;doprnt.c: 1547: *sp = 0;
   956  0727  082F               	movf	sprintf@sp,w
   957  0728  0084               	movwf	4
   958  0729  1383               	bcf	3,7	;select IRP bank0
   959  072A  0180               	clrf	0
   960  072B  0008               	return
   961  072C                     __end_of_sprintf:	
   962                           ;doprnt.c: 1549: return 0;
   963                           ;	Return value of _sprintf is never used
   964                           
   965                           
   966                           	psect	text4
   967  0636                     __ptext4:	
   968 ;; *************** function ___lwdiv *****************
   969 ;; Defined at:
   970 ;;		line 6 in file "/opt/microchip/xc8/v1.33/sources/common/lwdiv.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  divisor         2    0[COMMON] unsigned int 
   973 ;;  dividend        2    2[COMMON] unsigned int 
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  quotient        2    5[COMMON] unsigned int 
   976 ;;  counter         1    7[COMMON] unsigned char 
   977 ;; Return value:  Size  Location     Type
   978 ;;                  2    0[COMMON] unsigned int 
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   986 ;;      Params:         4       0       0       0       0
   987 ;;      Locals:         3       0       0       0       0
   988 ;;      Temps:          1       0       0       0       0
   989 ;;      Totals:         8       0       0       0       0
   990 ;;Total ram usage:        8 bytes
   991 ;; Hardware stack levels used:    1
   992 ;; This function calls:
   993 ;;		Nothing
   994 ;; This function is called by:
   995 ;;		_sprintf
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           
  1000                           ;psect for function ___lwdiv
  1001  0636                     ___lwdiv:	
  1002                           
  1003                           ;incstack = 0
  1004                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1005  0636  01F5               	clrf	___lwdiv@quotient
  1006  0637  01F6               	clrf	___lwdiv@quotient+1
  1007  0638  0871               	movf	___lwdiv@divisor+1,w
  1008  0639  0470               	iorwf	___lwdiv@divisor,w
  1009  063A  1903               	skipnz
  1010  063B  2E6D               	goto	l757
  1011  063C  01F7               	clrf	___lwdiv@counter
  1012  063D  0AF7               	incf	___lwdiv@counter,f
  1013  063E                     l745:	
  1014  063E  1BF1               	btfsc	___lwdiv@divisor+1,7
  1015  063F  2E4C               	goto	l747
  1016  0640  3001               	movlw	1
  1017  0641                     u265:	
  1018  0641  1003               	clrc
  1019  0642  0DF0               	rlf	___lwdiv@divisor,f
  1020  0643  0DF1               	rlf	___lwdiv@divisor+1,f
  1021  0644  3EFF               	addlw	-1
  1022  0645  1D03               	skipz
  1023  0646  2E41               	goto	u265
  1024  0647  3001               	movlw	1
  1025  0648  00F4               	movwf	??___lwdiv
  1026  0649  0874               	movf	??___lwdiv,w
  1027  064A  07F7               	addwf	___lwdiv@counter,f
  1028  064B  2E3E               	goto	l745
  1029  064C                     l747:	
  1030  064C  3001               	movlw	1
  1031  064D                     u285:	
  1032  064D  1003               	clrc
  1033  064E  0DF5               	rlf	___lwdiv@quotient,f
  1034  064F  0DF6               	rlf	___lwdiv@quotient+1,f
  1035  0650  3EFF               	addlw	-1
  1036  0651  1D03               	skipz
  1037  0652  2E4D               	goto	u285
  1038  0653  0871               	movf	___lwdiv@divisor+1,w
  1039  0654  0273               	subwf	___lwdiv@dividend+1,w
  1040  0655  1D03               	skipz
  1041  0656  2E59               	goto	u295
  1042  0657  0870               	movf	___lwdiv@divisor,w
  1043  0658  0272               	subwf	___lwdiv@dividend,w
  1044  0659                     u295:	
  1045  0659  1C03               	skipc
  1046  065A  2E62               	goto	l753
  1047  065B  0870               	movf	___lwdiv@divisor,w
  1048  065C  02F2               	subwf	___lwdiv@dividend,f
  1049  065D  0871               	movf	___lwdiv@divisor+1,w
  1050  065E  1C03               	skipc
  1051  065F  03F3               	decf	___lwdiv@dividend+1,f
  1052  0660  02F3               	subwf	___lwdiv@dividend+1,f
  1053  0661  1475               	bsf	___lwdiv@quotient,0
  1054  0662                     l753:	
  1055  0662  3001               	movlw	1
  1056  0663                     u305:	
  1057  0663  1003               	clrc
  1058  0664  0CF1               	rrf	___lwdiv@divisor+1,f
  1059  0665  0CF0               	rrf	___lwdiv@divisor,f
  1060  0666  3EFF               	addlw	-1
  1061  0667  1D03               	skipz
  1062  0668  2E63               	goto	u305
  1063  0669  3001               	movlw	1
  1064  066A  02F7               	subwf	___lwdiv@counter,f
  1065  066B  1D03               	btfss	3,2
  1066  066C  2E4C               	goto	l747
  1067  066D                     l757:	
  1068  066D  0876               	movf	___lwdiv@quotient+1,w
  1069  066E  01F1               	clrf	?___lwdiv+1
  1070  066F  07F1               	addwf	?___lwdiv+1,f
  1071  0670  0875               	movf	___lwdiv@quotient,w
  1072  0671  01F0               	clrf	?___lwdiv
  1073  0672  07F0               	addwf	?___lwdiv,f
  1074  0673  0008               	return
  1075  0674                     __end_of___lwdiv:	
  1076                           
  1077                           	psect	text5
  1078  061F                     __ptext5:	
  1079 ;; *************** function _send *****************
  1080 ;; Defined at:
  1081 ;;		line 35 in file "i2c1.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  a               1    wreg     unsigned char 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  a               1    4[COMMON] unsigned char 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  2    0[COMMON] int 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1095 ;;      Params:         2       0       0       0       0
  1096 ;;      Locals:         1       0       0       0       0
  1097 ;;      Temps:          2       0       0       0       0
  1098 ;;      Totals:         5       0       0       0       0
  1099 ;;Total ram usage:        5 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		_main
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function _send
  1110  061F                     _send:	
  1111                           
  1112                           ;incstack = 0
  1113                           ; Regs used in _send: [wreg+status,2+status,0]
  1114                           ;send@a stored from wreg
  1115  061F  00F4               	movwf	send@a
  1116                           
  1117                           ;i2c1.c: 37: SSPBUF=a;
  1118  0620  0874               	movf	send@a,w
  1119  0621  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0622  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0623  0093               	movwf	19	;volatile
  1122  0624                     l54:	
  1123                           ;i2c1.c: 38: while(SSPIF==0);
  1124                           
  1125  0624  1D8C               	btfss	12,3	;volatile
  1126  0625  2E24               	goto	l54
  1127                           
  1128                           ;i2c1.c: 39: SSPIF=0;
  1129  0626  118C               	bcf	12,3	;volatile
  1130                           
  1131                           ;i2c1.c: 40: return(ACKSTAT);
  1132  0627  1003               	clrc
  1133  0628  1683               	bsf	3,5	;RP0=1, select bank1
  1134  0629  1303               	bcf	3,6	;RP1=0, select bank1
  1135  062A  1B11               	btfsc	17,6	;volatile
  1136  062B  1403               	setc
  1137  062C  3000               	movlw	0
  1138  062D  1803               	skipnc
  1139  062E  3001               	movlw	1
  1140  062F  00F2               	movwf	??_send
  1141  0630  01F3               	clrf	??_send+1
  1142  0631  0872               	movf	??_send,w
  1143  0632  00F0               	movwf	?_send
  1144  0633  0873               	movf	??_send+1,w
  1145  0634  00F1               	movwf	?_send+1
  1146  0635  0008               	return
  1147  0636                     __end_of_send:	
  1148                           
  1149                           	psect	text6
  1150  05D5                     __ptext6:	
  1151 ;; *************** function _restart *****************
  1152 ;; Defined at:
  1153 ;;		line 50 in file "i2c1.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;		None
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;		None               void
  1160 ;; Registers used:
  1161 ;;		None
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1167 ;;      Params:         0       0       0       0       0
  1168 ;;      Locals:         0       0       0       0       0
  1169 ;;      Temps:          0       0       0       0       0
  1170 ;;      Totals:         0       0       0       0       0
  1171 ;;Total ram usage:        0 bytes
  1172 ;; Hardware stack levels used:    1
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           
  1181                           ;psect for function _restart
  1182  05D5                     _restart:	
  1183                           
  1184                           ;i2c1.c: 52: RSEN=1;
  1185                           
  1186                           ;incstack = 0
  1187                           ; Regs used in _restart: []
  1188  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  1189  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  1190  05D7  1491               	bsf	17,1	;volatile
  1191  05D8                     l66:	
  1192                           ;i2c1.c: 53: while(SSPIF==0);
  1193                           
  1194  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  1195  05D9  1D8C               	btfss	12,3	;volatile
  1196  05DA  2DD8               	goto	l66
  1197                           
  1198                           ;i2c1.c: 54: SSPIF=0;
  1199  05DB  118C               	bcf	12,3	;volatile
  1200  05DC  0008               	return
  1201  05DD                     __end_of_restart:	
  1202                           
  1203                           	psect	text7
  1204  05FF                     __ptext7:	
  1205 ;; *************** function _read *****************
  1206 ;; Defined at:
  1207 ;;		line 57 in file "i2c1.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      unsigned char 
  1214 ;; Registers used:
  1215 ;;		wreg
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         0       0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0
  1224 ;;      Totals:         0       0       0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function _read
  1236  05FF                     _read:	
  1237                           
  1238                           ;i2c1.c: 59: RCEN=1;
  1239                           
  1240                           ;incstack = 0
  1241                           ; Regs used in _read: [wreg]
  1242  05FF  1683               	bsf	3,5	;RP0=1, select bank1
  1243  0600  1303               	bcf	3,6	;RP1=0, select bank1
  1244  0601  1591               	bsf	17,3	;volatile
  1245  0602                     l72:	
  1246                           ;i2c1.c: 60: while(SSPIF==0);
  1247                           
  1248  0602  1283               	bcf	3,5	;RP0=0, select bank0
  1249  0603  1D8C               	btfss	12,3	;volatile
  1250  0604  2E02               	goto	l72
  1251                           
  1252                           ;i2c1.c: 61: SSPIF=0;
  1253  0605  118C               	bcf	12,3	;volatile
  1254                           
  1255                           ;i2c1.c: 62: return(SSPBUF);
  1256  0606  0813               	movf	19,w	;volatile
  1257  0607  0008               	return
  1258  0608                     __end_of_read:	
  1259                           
  1260                           	psect	text8
  1261  05F6                     __ptext8:	
  1262 ;; *************** function _nack *****************
  1263 ;; Defined at:
  1264 ;;		line 73 in file "i2c1.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;		None               void
  1271 ;; Registers used:
  1272 ;;		None
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1278 ;;      Params:         0       0       0       0       0
  1279 ;;      Locals:         0       0       0       0       0
  1280 ;;      Temps:          0       0       0       0       0
  1281 ;;      Totals:         0       0       0       0       0
  1282 ;;Total ram usage:        0 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; This function calls:
  1285 ;;		Nothing
  1286 ;; This function is called by:
  1287 ;;		_main
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           
  1292                           ;psect for function _nack
  1293  05F6                     _nack:	
  1294                           
  1295                           ;i2c1.c: 75: ACKDT=1;
  1296                           
  1297                           ;incstack = 0
  1298                           ; Regs used in _nack: []
  1299  05F6  1683               	bsf	3,5	;RP0=1, select bank1
  1300  05F7  1303               	bcf	3,6	;RP1=0, select bank1
  1301  05F8  1691               	bsf	17,5	;volatile
  1302                           
  1303                           ;i2c1.c: 76: ACKEN=1;
  1304  05F9  1611               	bsf	17,4	;volatile
  1305  05FA                     l84:	
  1306                           ;i2c1.c: 77: while(SSPIF==0);
  1307                           
  1308  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  1309  05FB  1D8C               	btfss	12,3	;volatile
  1310  05FC  2DFA               	goto	l84
  1311                           
  1312                           ;i2c1.c: 78: SSPIF=0;
  1313  05FD  118C               	bcf	12,3	;volatile
  1314  05FE  0008               	return
  1315  05FF                     __end_of_nack:	
  1316                           
  1317                           	psect	text9
  1318  0608                     __ptext9:	
  1319 ;; *************** function _init *****************
  1320 ;; Defined at:
  1321 ;;		line 16 in file "i2c1.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;		None               void
  1328 ;; Registers used:
  1329 ;;		wreg
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0
  1338 ;;      Totals:         0       0       0       0       0
  1339 ;;Total ram usage:        0 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; This function calls:
  1342 ;;		Nothing
  1343 ;; This function is called by:
  1344 ;;		_main
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           
  1349                           ;psect for function _init
  1350  0608                     _init:	
  1351                           
  1352                           ;i2c1.c: 18: SSPCON=0x28;
  1353                           
  1354                           ;incstack = 0
  1355                           ; Regs used in _init: [wreg]
  1356  0608  3028               	movlw	40
  1357  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1358  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1359  060B  0094               	movwf	20	;volatile
  1360                           
  1361                           ;i2c1.c: 19: SSPSTAT=0x80;
  1362  060C  3080               	movlw	128
  1363  060D  1683               	bsf	3,5	;RP0=1, select bank1
  1364  060E  1303               	bcf	3,6	;RP1=0, select bank1
  1365  060F  0094               	movwf	20	;volatile
  1366                           
  1367                           ;i2c1.c: 20: SSPADD=9;
  1368  0610  3009               	movlw	9
  1369  0611  0093               	movwf	19	;volatile
  1370                           
  1371                           ;i2c1.c: 21: TXSTA=0x24;
  1372  0612  3024               	movlw	36
  1373  0613  0098               	movwf	24	;volatile
  1374                           
  1375                           ;i2c1.c: 22: RCSTA=0x90;
  1376  0614  3090               	movlw	144
  1377  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0617  0098               	movwf	24	;volatile
  1380                           
  1381                           ;i2c1.c: 23: SPBRG=25;
  1382  0618  3019               	movlw	25
  1383  0619  1683               	bsf	3,5	;RP0=1, select bank1
  1384  061A  1303               	bcf	3,6	;RP1=0, select bank1
  1385  061B  0099               	movwf	25	;volatile
  1386                           
  1387                           ;i2c1.c: 24: TRISC4=1;
  1388  061C  1607               	bsf	7,4	;volatile
  1389                           
  1390                           ;i2c1.c: 25: TRISC3=1;
  1391  061D  1587               	bsf	7,3	;volatile
  1392  061E  0008               	return
  1393  061F                     __end_of_init:	
  1394                           
  1395                           	psect	text10
  1396  05ED                     __ptext10:	
  1397 ;; *************** function _ack *****************
  1398 ;; Defined at:
  1399 ;;		line 65 in file "i2c1.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;		None               void
  1406 ;; Registers used:
  1407 ;;		None
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1413 ;;      Params:         0       0       0       0       0
  1414 ;;      Locals:         0       0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0
  1416 ;;      Totals:         0       0       0       0       0
  1417 ;;Total ram usage:        0 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_main
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           
  1427                           ;psect for function _ack
  1428  05ED                     _ack:	
  1429                           
  1430                           ;i2c1.c: 67: ACKDT=0;
  1431                           
  1432                           ;incstack = 0
  1433                           ; Regs used in _ack: []
  1434  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  1435  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  1436  05EF  1291               	bcf	17,5	;volatile
  1437                           
  1438                           ;i2c1.c: 68: ACKEN=1;
  1439  05F0  1611               	bsf	17,4	;volatile
  1440  05F1                     l78:	
  1441                           ;i2c1.c: 69: while(SSPIF==0);
  1442                           
  1443  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1444  05F2  1D8C               	btfss	12,3	;volatile
  1445  05F3  2DF1               	goto	l78
  1446                           
  1447                           ;i2c1.c: 70: SSPIF=0;
  1448  05F4  118C               	bcf	12,3	;volatile
  1449  05F5  0008               	return
  1450  05F6                     __end_of_ack:	
  1451  007E                     btemp	set	126	;btemp
  1452  007E                     wtemp	set	126
  1453  007E                     wtemp0	set	126
  1454  0080                     wtemp1	set	128
  1455  0082                     wtemp2	set	130
  1456  0084                     wtemp3	set	132
  1457  0086                     wtemp4	set	134
  1458  0088                     wtemp5	set	136
  1459  007F                     wtemp6	set	127
  1460  007E                     ttemp	set	126
  1461  007E                     ttemp0	set	126
  1462  0081                     ttemp1	set	129
  1463  0084                     ttemp2	set	132
  1464  0087                     ttemp3	set	135
  1465  007F                     ttemp4	set	127
  1466  007E                     ltemp	set	126
  1467  007E                     ltemp0	set	126
  1468  0082                     ltemp1	set	130
  1469  0086                     ltemp2	set	134
  1470  0080                     ltemp3	set	128


Data Sizes:
    Strings     27
    Constant    8
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     44      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 15
		 -> main@a(BANK0[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S91$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->_sprintf
    _sprintf->___lwdiv

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0     968
                                             17 BANK0     27    27      0
                                _ack
                               _init
                               _nack
                               _read
                            _restart
                               _send
                            _sprintf
                              _start
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    13      7     757
                                              8 COMMON     3     3      0
                                              0 BANK0     17    10      7
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _send                                                 5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _restart                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _nack                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ack                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ack
   _init
   _nack
   _read
   _restart
   _send
   _sprintf
     ___lwdiv
   _start
   _stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      2C       5       55.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Jan 16 07:30:21 2021

                      pc 0002              __CFG_CP$OFF 0000                       l60 05E8  
                     l54 0624                       l72 0602                       l48 05E0  
                     l66 05D8                       l84 05FA                       l78 05F1  
                     l99 07E1                       fsr 0004                      l803 06AE  
                    l821 06E1                      l813 06C0                      l831 06E5  
                    l753 0662                      l745 063E                      l833 067B  
                    l747 064C                      l835 0727                      l851 075D  
                    l757 066D                      l881 07EE                      l797 069B  
                    l879 07D4                      u305 0663                      u415 06D7  
                    _PEN 048A                      u265 0641             __CFG_CPD$OFF 0000  
                    u285 064D                      u295 0659                      _SEN 0488  
                    u497 07F4                      _ack 05ED                      fsr0 0004  
                    indf 0000             __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000  
                   ?_ack 0070                     STR_1 0022                     STR_2 0011  
                   _RCEN 048B                     _RSEN 0489                     _TRMT 04C1  
           __CFG_WRT$OFF 0000                     _nack 05F6                     _main 072C  
                   _init 0608                     _read 05FF                     _send 061F  
                   btemp 007E                     _stop 05E5                     ltemp 007E  
                   start 0000                     ttemp 007E                     wtemp 007E  
                  ??_ack 0070                    ?_nack 0070                    ?_main 0070  
                  _ACKEN 048C                    _ACKDT 048D                    ?_init 0070  
                  ?_read 0070                    ?_send 0070            __CFG_WDTE$OFF 0000  
                  ?_stop 0070          __end_of___lwdiv 0674                    _RCSTA 0018  
                  _SPBRG 0099                    _SSPIF 0063                    _TXREG 0019  
                  _TXSTA 0098                    _start 05DD                    main@a 0038  
                  main@i 004A           __CFG_BOREN$OFF 0000                    pclath 000A  
                  send@a 0074                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080          __end_of_restart 05DD  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __end_of_sprintf 072C          __initialization 07FC  
           __end_of_nack 05FF             __end_of_main 07FC             __end_of_init 061F  
           __end_of_read 0608             __end_of_send 0636             __end_of_stop 05ED  
                 ??_nack 0070                   ??_main 0031                   ??_init 0070  
                 ??_read 0070                   ??_send 0072                   ??_stop 0070  
                 ?_start 0070                   _SSPADD 0093                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPCON 0014                   _SSPBUF 0013  
         __CFG_PWRTE$OFF 0000                ??___lwdiv 0074                   main@hr 0049  
              ??_restart 0070                ??_sprintf 0078  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_start 05E5                  ??_start 0070  
             __pmaintext 072C                  _ACKSTAT 048E                  _SSPSTAT 0094  
             __stringtab 0003                  ___lwdiv 0636                  __ptext1 05E5  
                __ptext2 05DD                  __ptext3 0674                  __ptext4 0636  
                __ptext5 061F                  __ptext6 05D5                  __ptext7 05FF  
                __ptext8 05F6                  __ptext9 0608        __end_of_hexpowers 0011  
           __size_of_ack 0009                  _restart 05D5                  _sprintf 0674  
                main@min 0048                  main@sec 0047     end_of_initialization 07FC  
    start_initialization 07FC              __end_of_ack 05F6                ___latbits 0002  
          __pcstackBANK0 0020      __end_of__stringdata 002C              sprintf@_val 002A  
            sprintf@flag 0027              sprintf@prec 002E         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                __pstrings 0003                 ?_restart 0070  
              _hexpowers 0009         ___lwdiv@quotient 0075                 ?_sprintf 0020  
         __size_of_start 0008              __stringbase 0008              __stringdata 0011  
       __size_of___lwdiv 003E       __end_of__stringtab 0009               sprintf@idx 0028  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 05ED  
       __size_of_restart 0008         __size_of_sprintf 00B8            __size_of_nack 0009  
          __size_of_main 00D0            __size_of_init 0017            __size_of_read 0009  
          __size_of_send 0017            __size_of_stop 0008                sprintf@ap 0029  
              sprintf@sp 002F                stringcode 0003                 sprintf@c 0030  
               sprintf@f 0020                 stringdir 0003                 stringtab 0003  
